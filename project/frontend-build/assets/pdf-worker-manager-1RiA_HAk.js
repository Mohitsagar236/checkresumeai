var z=Object.defineProperty;var k=(e,i,t)=>i in e?z(e,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[i]=t;var n=(e,i,t)=>k(e,typeof i!="symbol"?i+"":i,t);import{G as l,a as m}from"./pdfjs-Cev1TANf.js";import{j as f}from"./heavy-pages-C8trrwvk.js";import"./react-vendor-GyENwBWe.js";import"./vendor-x74MHN4I.js";import"./api-auth-dsn4brwG.js";import"./utilities-CaqBGVfY.js";import"./ui-components-C10pzA45.js";let u=!1,s=null;async function I(e){if(u&&s)return!0;try{return l.workerSrc=e.workerSrc,s=new m("pdf-worker"),await s.promise,s.port.addEventListener("message",i=>{const t=i.data;t!=null&&t.callbackId&&f.resolveCallback(t.callbackId,t.data||t)}),u=!0,!0}catch(i){return console.error("Failed to initialize PDF worker:",i),!1}}const d=3,p=1e3,r=class r{constructor(){n(this,"initializationRetries",0);n(this,"isInitializing",!1);n(this,"isInitialized",!1);n(this,"initializationFailed",!1)}static getInstance(){return r.instance||(r.instance=new r),r.instance}reset(){this.initializationRetries=0,this.isInitializing=!1,this.isInitialized=!1,this.initializationFailed=!1}incrementRetries(){return++this.initializationRetries}get retries(){return this.initializationRetries}setInitializing(i){this.isInitializing=i}get initializing(){return this.isInitializing}setInitialized(i){this.isInitialized=i}get initialized(){return this.isInitialized}setFailed(i){this.initializationFailed=i}get failed(){return this.initializationFailed}};n(r,"instance");let c=r;function g(){const e=window.onerror;return window.onerror=(i,t,a,o,w)=>i!=null&&i.toString().includes("Receiving end does not exist")?!0:e?e(i,t,a,o,w):!1,()=>{window.onerror=e}}async function h(){try{l.workerPort&&l.workerPort.terminate(),l.workerPort=null,f.clear(),await new Promise(e=>setTimeout(e,100))}catch(e){console.warn("Error during PDF state reset:",e)}}async function P(e){const i=c.getInstance();if(i.initialized)return!0;if(i.initializing)return await new Promise(t=>setTimeout(t,100)),i.initialized;if(i.failed||i.retries>=d)return console.error("Maximum PDF worker initialization retries reached"),!1;i.setInitializing(!0);try{const t=g();if(await I(e||{workerSrc:"/pdf-worker/pdf.worker.min.mjs"}))return i.setInitialized(!0),i.setInitializing(!1),t(),!0;throw new Error("Worker initialization failed")}catch(t){if(console.warn(`PDF worker initialization attempt ${i.retries+1} failed:`,t),i.incrementRetries(),i.retries>=d)return i.setFailed(!0),console.error("❌ PDF.js worker initialization failed after all attempts"),!1;await h();const a=p*Math.pow(2,i.retries-1);return await new Promise(o=>setTimeout(o,a)),i.setInitializing(!1),P(e)}}export{P as ensurePdfWorkerInitialized};
